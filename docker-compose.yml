version: "3.8"

services:
  # --- Elasticsearch instance for SIEM (Kibana, GEKO App) ---
  elasticsearch-siem:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.1 # Version aligned with Kibana
    container_name: elasticsearch-siem
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD:-Changeme} # Use .env file, with a default
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata-siem:/usr/share/elasticsearch/data # <-- Uses a unique volume
    ports:
      - "9200:9200" # Exposed to host for GEKO app and management
    networks:
      - geko-net

  # --- Kibana for SIEM ---
  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.1 # Version aligned with Elasticsearch
    container_name: kibana
    environment:
      # Connects to the 'elasticsearch-siem' service inside Docker
      - ELASTICSEARCH_HOSTS=["http://elasticsearch-siem:9200"]
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD:-Changeme} # Set this in your .env file
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch-siem
    networks:
      - geko-net
    restart: always

  # --- Redis for OpenCTI ---
  redis:
    image: redis:7.2-alpine # Using a valid, stable image tag
    restart: always
    volumes:
      - redis-data:/data
    networks:
      - geko-net

  # --- Elasticsearch instance for OpenCTI ---
  elasticsearch-opencti:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.1
    container_name: elasticsearch-opencti
    volumes:
      - esdata-opencti:/usr/share/elasticsearch/data # <-- Uses a unique volume
    environment:
      - discovery.type=single-node
      - xpack.ml.enabled=false
      - xpack.security.enabled=false # Security is disabled for OpenCTI's internal ES
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g" # Adjusted memory
    restart: always
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - geko-net

  # --- MinIO for OpenCTI ---
  minio:
    image: minio/minio:RELEASE.2024-08-07T23-53-33Z # Using a valid, recent image tag
    volumes:
      - s3data:/data
    ports:
      - "9001:9000" # Changed host port to avoid conflict with ES
      - "9002:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    restart: always
    networks:
      - geko-net

  # --- RabbitMQ for OpenCTI ---
  rabbitmq:
    image: rabbitmq:3.13-management # Using a valid, stable image tag
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    restart: always
    networks:
      - geko-net

  # --- OpenCTI Platform ---
  opencti:
    image: opencti/platform:5.12.9
    environment:
      - APP__PORT=8080
      - APP__BASE_URL=${OPENCTI_BASE_URL}
      - APP__ADMIN__TOKEN=${OPENCTI_ADMIN_TOKEN}
      - APP__ADMIN__EMAIL=${OPENCTI_ADMIN_EMAIL}
      - APP__ADMIN__PASSWORD=${OPENCTI_ADMIN_PASSWORD}
      - REDIS__HOSTNAME=redis
      # Connects to the 'elasticsearch-opencti' service inside Docker
      - ELASTICSEARCH__URL=http://elasticsearch-opencti:9200
      - MINIO__ENDPOINT=minio
      - MINIO__PORT=9000
      - RABBITMQ__HOSTNAME=rabbitmq
      - RABBITMQ__USERNAME=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ__PASSWORD=${RABBITMQ_DEFAULT_PASS}
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - elasticsearch-opencti # <-- Depends on the correct ES instance
      - minio
      - rabbitmq
    restart: always
    networks:
      - geko-net

  # --- GEKO Python App ---
  geko-app:
    build: .
    container_name: geko-app
    depends_on:
      - opencti
      - elasticsearch-siem # <-- Depends on the correct ES instance
    env_file:
      - .env
    volumes:
      - ./reports:/app/reports
    restart: on-failure
    networks:
      - geko-net

  # --- GitLab ---
  gitlab:
    image: gitlab/gitlab-ce:latest
    container_name: gitlab
    hostname: gitlab.geko.local # Using a more specific hostname
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://gitlab.geko.local:8929'
        gitlab_rails['gitlab_shell_ssh_port'] = 2224
    ports:
      - "8929:80"     # <-- Changed host port to avoid conflict
      - "2224:22"
    volumes:
      - gitlab-config:/etc/gitlab
      - gitlab-logs:/var/log/gitlab
      - gitlab-data:/var/opt/gitlab
    networks:
      - geko-net
    restart: always

# Define unique volumes at the bottom
volumes:
  esdata-siem:
  esdata-opencti:
  redis-data:
  s3data:
  rabbitmq-data:
  gitlab-config:
  gitlab-logs:
  gitlab-data:

# Define a single network for all services
networks:
  geko-net:
    driver: bridge